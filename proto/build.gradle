plugins {
    id 'java-library'                       // ← api/implementation 분리를 위해 반드시 필요
    id 'com.google.protobuf' version '0.8.19'  // 사용 버전 유지(업그레이드 가능)
}

group = 'proto'
version = '0.0.1'

dependencies {
    api platform("com.google.protobuf:protobuf-bom:3.25.5")
    api platform("io.grpc:grpc-bom:1.65.0")

    // 메시지 런타임 (GeneratedMessageV3 포함)
    api "com.google.protobuf:protobuf-java"

    // gRPC 메시지/스텁 → 여러 모듈이 참조하므로 api
    api "io.grpc:grpc-protobuf"
    api "io.grpc:grpc-stub"

    // JDK21에서도 어노테이션 필요 시(Nullable 등) 유지
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
}

sourceSets {
    main {
        proto { srcDir 'src/main/proto' }
        // 아래 두 라인은 protobuf 플러그인이 자동 추가하므로 사실 생략 가능
        java {
            srcDirs = [
                'src/main/java',
                'build/generated/source/proto/main/java',
                'build/generated/source/proto/main/grpc'
            ]
        }
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.25.5'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.65.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java { outputSubDir = 'java' }
            }
            task.plugins {
                grpc { outputSubDir = 'grpc' }
            }
        }
    }
}

tasks.named('processResources') {
    exclude('**/*.proto')
}

tasks.named('bootJar') { enabled = false }
tasks.named('compileJava') { dependsOn tasks.named('generateProto') }
