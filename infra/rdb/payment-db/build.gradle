dependencies {
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation(project(":domain:payment-domain"))
    implementation(project(":application:payment-app"))
    implementation("com.querydsl:querydsl-jpa:${property("queryDslVersion")}:jakarta")

    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation('com.fasterxml.jackson.core:jackson-databind:2.13.4.2')
    
    implementation(project(path: ":support:constant"))

    runtimeOnly("mysql:mysql-connector-java:${property("mysqlVersion")}")

    annotationProcessor("com.querydsl:querydsl-apt:${property("queryDslVersion")}:jakarta")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
}

def queryDslDir = "src/main/generated"
tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorGeneratedSourcesDirectory(file(queryDslDir))
}

sourceSets {
    main {
        java {
            srcDirs += queryDslDir
        }
    }
}

clean.doLast {
    file(queryDslDir).delete()
}

tasks.named("bootJar") {
    enabled = false
}